<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.attendance.mapper.AttendHolidayMapper">

    <resultMap type="AttendHoliday" id="AttendHolidayResult">
        <result property="holidayId"    column="holiday_id"    />
        <result property="name"    column="name"    />
        <result property="beginTime"    column="begin_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectAttendHolidayVo">
        select holiday_id, name, begin_time, end_time, status, create_by, create_time, update_by, update_time, remark from attend_holiday
    </sql>

    <select id="selectAttendHolidayList" parameterType="AttendHoliday" resultMap="AttendHolidayResult">
        <include refid="selectAttendHolidayVo"/>
        <where>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="beginTime != null "> and begin_time = #{beginTime}</if>
            <if test="endTime != null "> and end_time = #{endTime}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>

    <select id="selectAttendHolidayByHolidayId" parameterType="Long" resultMap="AttendHolidayResult">
        <include refid="selectAttendHolidayVo"/>
        where holiday_id = #{holidayId}
    </select>

    <insert id="insertAttendHoliday" parameterType="AttendHoliday" useGeneratedKeys="true" keyProperty="holidayId">
        insert into attend_holiday
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="beginTime != null">begin_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="beginTime != null">#{beginTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateAttendHoliday" parameterType="AttendHoliday">
        update attend_holiday
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="beginTime != null">begin_time = #{beginTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where holiday_id = #{holidayId}
    </update>

    <delete id="deleteAttendHolidayByHolidayId" parameterType="Long">
        delete from attend_holiday where holiday_id = #{holidayId}
    </delete>

    <delete id="deleteAttendHolidayByHolidayIds" parameterType="String">
        delete from attend_holiday where holiday_id in
        <foreach item="holidayId" collection="array" open="(" separator="," close=")">
            #{holidayId}
        </foreach>
    </delete>

    <update id="updateCalendar" parameterType="AttendHoliday">
        update config_calendar
        set rep_status = #{status}
        where date_format(rep_date,'%y%m%d') &gt;= date_format(#{beginDate},'%y%m%d') AND
              date_format(rep_date,'%y%m%d') &lt;= date_format(#{endDate},'%y%m%d')
    </update>

</mapper>
