<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.attendance.mapper.AttendInitialMapper">

    <resultMap type="AttendInitial" id="AttendInitialResult">
        <result property="initialId"    column="initial_id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="initialTime"    column="initial_time"    />
        <result property="initialPlace"    column="initial_place"    />
    </resultMap>

    <resultMap type="AttendRecord" id="AttendRecordResult">
        <result property="recordId"    column="record_id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="ruleId"    column="rule_id"    />
        <result property="ruleName"    column="rule_name"    />
        <result property="attendDate"    column="attend_date"    />
        <result property="weekdayNum"    column="weekday_num"    />
        <result property="isWorkday"    column="is_workday"    />
        <result property="attendMonth"    column="attend_month"    />
        <result property="attendHour"    column="attend_hour"    />
        <result property="scheduleSort"    column="schedule_sort"    />
        <result property="onTime"    column="on_time"    />
        <result property="onStatus"    column="on_status"    />
        <result property="offTime"    column="off_time"    />
        <result property="offStatus"    column="off_status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectAttendInitialVo">
        select initial_id, user_id, user_name, initial_time, initial_place from attend_initial
    </sql>

    <select id="selectAttendInitialList" parameterType="AttendInitial" resultMap="AttendInitialResult">
        <include refid="selectAttendInitialVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="initialTime != null "> and initial_time = #{initialTime}</if>
            <if test="initialPlace != null  and initialPlace != ''"> and initial_place like concat('%', #{initialPlace}, '%')</if>
        </where>
    </select>

    <select id="selectAttendInitialByInitialId" parameterType="Long" resultMap="AttendInitialResult">
        <include refid="selectAttendInitialVo"/>
        where initial_id = #{initialId}
    </select>

    <insert id="insertAttendInitial" parameterType="AttendInitial" useGeneratedKeys="true" keyProperty="initialId">
        insert into attend_initial
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="initialTime != null">initial_time,</if>
            <if test="initialPlace != null">initial_place,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="initialTime != null">#{initialTime},</if>
            <if test="initialPlace != null">#{initialPlace},</if>
         </trim>
    </insert>

    <update id="updateAttendInitial" parameterType="AttendInitial">
        update attend_initial
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="initialTime != null">initial_time = #{initialTime},</if>
            <if test="initialPlace != null">initial_place = #{initialPlace},</if>
        </trim>
        where initial_id = #{initialId}
    </update>

    <delete id="deleteAttendInitialByInitialId" parameterType="Long">
        delete from attend_initial where initial_id = #{initialId}
    </delete>

    <delete id="deleteAttendInitialByInitialIds" parameterType="String">
        delete from attend_initial where initial_id in
        <foreach item="initialId" collection="array" open="(" separator="," close=")">
            #{initialId}
        </foreach>
    </delete>

    <!--将原始的考勤记录按日期整理成标准形式 -->
    <select id="selectAttendRecordList" resultMap="AttendRecordResult">
        select ifnull(m.user_id, #{userId}),
               m.user_name,
               m.rule_id,
               m.rule_name,
               substr(c1.rep_date, 1, 7) as attend_month,
               c1.rep_date as attend_date,
               c1.rep_week as weekday_num,
               c1.rep_status as is_workday,
               m.on_time as on_time,
               m.off_time as off_time
        from config_calendar c1
             left join (
                  select u.user_id,
                       u.user_name,
                       r.rule_id,
                       r.rule_name,
                  	   substr(c.rep_date, 1, 7) as attend_month,
                  	   c.rep_date as attend_date,
                  	   c.rep_week as weekday_num,
                  	   c.rep_status as is_workday,
                  	   min(i.initial_time) as on_time,
                  	   max(i.initial_time) as off_time
                  from attend_initial i
                       left join config_calendar c on substr(i.initial_time,1,10) = c.rep_date
                       left join sys_user u on i.user_id = u.user_id
                       left join attend_rule r on u.rule_id = r.rule_id
                  where i.user_id = #{userId} and date_format(c.rep_date,'%y%m%d') &lt;= date_format(#{date},'%y%m%d')
                  group by i.user_id, substr(i.initial_time, 1, 10)
             ) as m on c1.rep_date = m.attend_date
        where date_format(c1.rep_date,'%y%m%d') &lt;= date_format(#{date},'%y%m%d')
        order by c1.rep_date asc;
    </select>
</mapper>
