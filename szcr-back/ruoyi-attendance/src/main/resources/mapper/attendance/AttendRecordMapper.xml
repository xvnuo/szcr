<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.attendance.mapper.AttendRecordMapper">

    <resultMap type="AttendRecord" id="AttendRecordResult">
        <result property="recordId"    column="record_id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="attendDate"    column="attend_date"    />
        <result property="weekdayNum"    column="weekday_num"    />
        <result property="isWorkday"    column="is_workday"    />
        <result property="attendMonth"    column="attend_month"    />
        <result property="attendHour"    column="attend_hour"    />
        <result property="scheduleSort"    column="schedule_sort"    />
        <result property="onTime"    column="on_time"    />
        <result property="onStatus"    column="on_status"    />
        <result property="offTime"    column="off_time"    />
        <result property="offStatus"    column="off_status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="ruleId"    column="rule_id"    />
        <result property="ruleName"    column="rule_name"    />
        <result property="attendType"    column="attend_type"    />
    </resultMap>

    <resultMap type="AttendStatistics"  id="AttendStatisticsResult">
        <result property="statisticsId" column="statistics_id"    />
        <result property="attendMonth"  column="attend_month"    />
        <result property="userId"       column="user_id"    />
        <result property="userName"     column="user_name"    />
        <result property="ruleId"       column="rule_id"    />
        <result property="ruleName"     column="rule_name"    />
        <result property="attendDays"   column="attend_days"    />
        <result property="normalDays"   column="normal_days"    />
        <result property="outsideDays"  column="outside_days"    />
        <result property="absenceDays"  column="absence_days"    />
        <result property="leaveDays"    column="leave_days"    />
        <result property="lateTimes"    column="late_times"    />
        <result property="earlyTimes"   column="early_times"    />
        <result property="overHours"    column="over_hours"    />
    </resultMap>

    <sql id="selectAttendRecordVo">
        select record_id, user_id, user_name, attend_date, weekday_num, is_workday, attend_month, attend_hour, schedule_sort, on_time, on_status, off_time, off_status, create_by, create_time, update_by, update_time, remark, rule_id, rule_name, attend_type from attend_record
    </sql>

    <select id="selectAttendRecordList" parameterType="AttendRecord" resultMap="AttendRecordResult">
        <include refid="selectAttendRecordVo"/>
        <where>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(attend_date,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(attend_date,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
            <if test="onStatus != null  and onStatus != ''"> and on_status = #{onStatus}</if>
            <if test="offStatus != null  and offStatus != ''"> and off_status = #{offStatus}</if>
            <if test="attendType != null  and attendType != ''"> and attend_type = #{attendType}</if>
        </where>
        order by user_id, attend_date asc
    </select>

    <select id="checkDuplicate" parameterType="AttendRecord" resultMap="AttendRecordResult">
        select *
        from   attend_record
        where  user_id = #{userId} and to_days(attend_date) = to_days(#{attendDate})
    </select>

    <select id="selectAttendRecordByRecordId" parameterType="Long" resultMap="AttendRecordResult">
        <include refid="selectAttendRecordVo"/>
        where record_id = #{recordId}
    </select>

    <insert id="insertAttendRecord" parameterType="AttendRecord" useGeneratedKeys="true" keyProperty="recordId">
        insert into attend_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="attendDate != null">attend_date,</if>
            <if test="weekdayNum != null">weekday_num,</if>
            <if test="isWorkday != null">is_workday,</if>
            <if test="attendMonth != null">attend_month,</if>
            <if test="attendHour != null">attend_hour,</if>
            <if test="scheduleSort != null">schedule_sort,</if>
            <if test="onTime != null">on_time,</if>
            <if test="onStatus != null">on_status,</if>
            <if test="offTime != null">off_time,</if>
            <if test="offStatus != null">off_status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="ruleId != null">rule_id,</if>
            <if test="ruleName != null">rule_name,</if>
            <if test="attendType != null">attend_type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="attendDate != null">#{attendDate},</if>
            <if test="weekdayNum != null">#{weekdayNum},</if>
            <if test="isWorkday != null">#{isWorkday},</if>
            <if test="attendMonth != null">#{attendMonth},</if>
            <if test="attendHour != null">#{attendHour},</if>
            <if test="scheduleSort != null">#{scheduleSort},</if>
            <if test="onTime != null">#{onTime},</if>
            <if test="onStatus != null">#{onStatus},</if>
            <if test="offTime != null">#{offTime},</if>
            <if test="offStatus != null">#{offStatus},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="ruleId != null">#{ruleId},</if>
            <if test="ruleName != null">#{ruleName},</if>
            <if test="attendType != null">#{attendType},</if>
         </trim>
    </insert>

    <update id="updateAttendRecord" parameterType="AttendRecord">
        update attend_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="attendDate != null">attend_date = #{attendDate},</if>
            <if test="weekdayNum != null">weekday_num = #{weekdayNum},</if>
            <if test="isWorkday != null">is_workday = #{isWorkday},</if>
            <if test="attendMonth != null">attend_month = #{attendMonth},</if>
            <if test="attendHour != null">attend_hour = #{attendHour},</if>
            <if test="scheduleSort != null">schedule_sort = #{scheduleSort},</if>
            <if test="onTime != null">on_time = #{onTime},</if>
            <if test="onStatus != null">on_status = #{onStatus},</if>
            <if test="offTime != null">off_time = #{offTime},</if>
            <if test="offStatus != null">off_status = #{offStatus},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="ruleId != null">rule_id = #{ruleId},</if>
            <if test="ruleName != null">rule_name = #{ruleName},</if>
            <if test="attendType != null">attend_type = #{attendType},</if>
        </trim>
        <where>
            <if test="recordId != null  and recordId != ''"> record_id = #{recordId}</if>
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="attendDate != null"> and to_days(attend_date) = to_days(#{attendDate})</if>
        </where>
    </update>

    <delete id="deleteAttendRecordByRecordId" parameterType="Long">
        delete from attend_record where record_id = #{recordId}
    </delete>

    <delete id="deleteAttendRecordByRecordIds" parameterType="String">
        delete from attend_record where record_id in
        <foreach item="recordId" collection="array" open="(" separator="," close=")">
            #{recordId}
        </foreach>
    </delete>

    <select id="selectStatisticsList" resultMap="AttendStatisticsResult">
        select attend_month,
               user_id,
               user_name,
               rule_id,
               rule_name,
               count(case when attend_type='1' or attend_type='4' then attend_date end)*1.0 as attend_days,
               count(case when attend_type='1' and on_status='1' and off_status='1' then attend_date end)*1.0 as normal_days,
               count(case when attend_type='6' then attend_date end)*1.0 as outside_days,
        	   count(case when attend_type='5' then attend_date end)*1.0 as absence_days,
               count(case when attend_type='3' then attend_date end)*1.0 as leave_days,
        	   count(case when attend_type='4' then attend_date end)*1.0 as over_hours,
        	   count(case when attend_type='1' and off_status='3' then attend_date end) as early_times,
        	   count(case when attend_type='1' and (on_status='2' or off_status='2') then attend_date end) as late_times
        from attend_record
        where user_id = #{userId} and date_format(attend_date,'%y%m') &lt;= date_format(#{attendMonth},'%y%m')
        group by user_id, attend_month
        order by user_id, attend_month ASC
    </select>
</mapper>
